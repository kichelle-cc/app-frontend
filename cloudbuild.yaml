steps:
# Upgrade pip
  # - name: 'python'
  #   entrypoint: 'pip'
  #   args: ['install', '--upgrade', 'pip', '--user']

  # # Install requirements
  # - name: python
  #   id: 'INSTALL_REQS'
  #   entrypoint: pip
  #   args: ['install', '-r', 'requirements.txt', '--user']

  # Install testing requirements
  # - name: python
    # id: 'INSTALL_TEST_REQS'
    # entrypoint: pip
    # args: ['install', 'flake8', 'pytest', 'licensecheck', '--user']

  # Unit test
  # - name: 'python'
  #   id: 'TEST'
  #   entrypoint: 'python3'
  #   args: ['-m', 'pytest', 'src']
  #   # args: ['-m', 'pytest', '--junitxml=${SHORT_SHA}_test_log.xml']

  # # License checking
  # - name: 'python'
  #   id: 'LICENSE'
  #   entrypoint: 'python3'
  #   args: ['-m', 'licensecheck', '-u', 'requirements']
    # args: ['-m', 'licensecheck', '-u', 'requirements', '--file', '${SHORT_SHA}_license_log.xml']

  # Linting
  # - name: 'python'
    # id: 'FLAKE8'
    # entrypoint: 'python3'
    # args: ['-m', 'flake8', '--max-line-length=100', 'src']

  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '--platform', 'linux/amd64', '-t', 
            'europe-west2-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REG_REPO_NAME}/${_REPO_NAME}:${SHORT_SHA}', '.']

  # Use Trivy to scan the built image
  # - name: 'aquasec/trivy'
    # args: ['image', 'europe-west2-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REG_REPO_NAME}/${_REPO_NAME}:${SHORT_SHA}']

  # Docker push to Google Artifact Registry
  # Need to create a new artifact reg repository for the project first 
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push',  'europe-west2-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REG_REPO_NAME}/${_REPO_NAME}:${SHORT_SHA}']

  # Deploy to Cloud Run
  # need to make sure no underscore in name
  - name: google/cloud-sdk
    args: ['gcloud', 'run', 'deploy', 'fast-app-${SHORT_SHA}', 
            '--image=europe-west2-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REG_REPO_NAME}/${_REPO_NAME}:${SHORT_SHA}', 
            '--region', 'europe-west2', '--platform', 'managed', 
            '--allow-unauthenticated']

options:
  logging: CLOUD_LOGGING_ONLY
